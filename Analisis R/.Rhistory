verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p5<-p5$table
p5
#precisión Global
precision_global<-round(sum(diag(p5))/sum(p5),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p5)[2]/colSums(p5)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p5)[1]/colSums(p5)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p5)[2]/rowSums(p5)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p5)[1]/rowSums(p5)[1],4)
asertividad_negativa
mod6 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior5, family = "categorical", nitt = 25000, thin = 20)
summary(mod6)
plot(mod6$Sol)
geweke.plot(mod6$Sol)
autocorr.plot(mod6$Sol)
pred6 <- predict(mod6, newdata = test_datos)
p6<-pred6 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.5,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p6<-p6$table
p6
#precisión Global
precision_global<-round(sum(diag(p6))/sum(p6),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p6)[2]/colSums(p6)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p6)[1]/colSums(p6)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p6)[2]/rowSums(p6)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p6)[1]/rowSums(p6)[1],4)
asertividad_negativa
pred6 <- predict(mod6, newdata = test_datos)
p6<-pred6 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p6<-p6$table
p6
#precisión Global
precision_global<-round(sum(diag(p6))/sum(p6),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p6)[2]/colSums(p6)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p6)[1]/colSums(p6)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p6)[2]/rowSums(p6)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p6)[1]/rowSums(p6)[1],4)
asertividad_negativa
mod6 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior5, family = "categorical", nitt = 30000, thin = 20,burnin =3000 )
summary(mod6)
plot(mod6$Sol)
geweke.plot(mod6$Sol)
autocorr.plot(mod6$Sol)
coda::heidel.diag(mod6$Sol)
pred6 <- predict(mod6, newdata = test_datos)
p6<-pred6 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p6<-p6$table
p6
#precisión Global
precision_global<-round(sum(diag(p6))/sum(p6),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p6)[2]/colSums(p6)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p6)[1]/colSums(p6)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p6)[2]/rowSums(p6)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p6)[1]/rowSums(p6)[1],4)
asertividad_negativa
datos=read.csv("BASE SEGUROS.csv",sep = ";",dec=",",stringsAsFactors = F)
datos$Producto<-as.factor(datos$Producto)
datos$Moneda<-as.factor(datos$Moneda)
datos$Plan<-as.factor(datos$Plan)
datos$MedioPagoEmisor<-as.factor(datos$MedioPagoEmisor)
datos$MedioPagoPlan<-as.factor(datos$MedioPagoPlan)
datos$sexo<-as.factor(datos$sexo)
datos$Estado<-as.numeric(datos$Estado)
datos$Numero_Hijos<-as.numeric(datos$Numero_Hijos)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+
Numero_Hijos,b0=0, B0=.001, data=datos,mcmc = 4000,marginal.likelihood ="Laplace")
coda::raftery.diag(model1)
coda::geweke.plot(model1)
coda::autocorr.plot(model1)
coda::autocorr.plot(model1)
coda::heidel.diag(model1)
coda::heidel.diag(model1)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+
Numero_Hijos,b0=0, B0=.001, data=datos,mcmc = 10000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 20)
coda::geweke.plot(model1)
coda::autocorr.plot(model1)
coda::autocorr.plot(model1)
Numero_Hijos,b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 3000,thin = 20)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+
Numero_Hijos,b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 3000,thin = 20)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+Numero_Hijos,
b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 3000,thin = 20)
coda::geweke.plot(model1)
coda::geweke.plot(model1)
coda::autocorr.plot(model1
)
coda::heidel.diag(model1)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+Numero_Hijos,
b0=0, B0=.001, data=datos,mcmc = 10000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
coda::heidel.diag(model1)
summary(model1)
BF<-BayesFactor(model1,model2)
mod.probs<- PostProbMod(BF)
mod.probs
model2 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 10000,
marginal.likelihood ="Laplace",burnin = 1000,thin = 10)
BF<-BayesFactor(model1,model2)
mod.probs<- PostProbMod(BF)
mod.probs
options(scipen = 999)
mod.probs
summary(model2)
coda::heidel.diag(model2)
model3 <- MCMClogit(Estado~Producto+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 10000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
BF<-BayesFactor(model2,model3)
mod.probs<- PostProbMod(BF)
mod.probs
#la hipótesis nula. Por lo que se puede decir que se alcanza convergencia.
coda::heidel.diag(model3)
#Quitar medio pago emisor
model4 <- MCMClogit(Estado~Producto+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 10000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
BF<-BayesFactor(model3,model4)
mod.probs<- PostProbMod(BF)
mod.probs
coda::heidel.diag(model4)
summary(model4)
coda::geweke.plot(model4)
coda::autocorr.plot(model4)
model4 <- MCMClogit(Estado~Producto+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
coda::heidel.diag(model4)
library(multilevel)
library(MCMCpack)
library(MCMCglmm)
library(bayesplot)
library(tidyverse)
library(coda)
datos=read.csv("BASE SEGUROS.csv",sep = ";",dec=",",stringsAsFactors = F)
datos$Producto<-as.factor(datos$Producto)
datos$Moneda<-as.factor(datos$Moneda)
datos$Plan<-as.factor(datos$Plan)
datos$MedioPagoEmisor<-as.factor(datos$MedioPagoEmisor)
datos$MedioPagoPlan<-as.factor(datos$MedioPagoPlan)
datos$sexo<-as.numeric(datos$sexo)
datos$Estado<-as.numeric(datos$Estado)
datos$Numero_Hijos<-as.numeric(datos$Numero_Hijos)
datos <- datos %>%
select(Estado, Producto, MedioPagoPlan, Antiguedad, edad)
prop.table(table(datos$Estado))
#Bases para Training Testing
set.seed(1353)
split <- rsample::initial_split(datos)
train_datos <- rsample::training(split)
test_datos <- rsample::testing(split)
prior1 <- list(R = list(V = 1, nu = 0))
mod1 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior1, family = "categorical")
summary(mod1)
mod1$DIC
library(multilevel)
library(MCMCpack)
library(MCMCglmm)
library(bayesplot)
library(tidyverse)
library(coda)
datos=read.csv("BASE SEGUROS.csv",sep = ";",dec=",",stringsAsFactors = F)
datos$Producto<-as.factor(datos$Producto)
datos$Moneda<-as.factor(datos$Moneda)
datos$Plan<-as.factor(datos$Plan)
datos$MedioPagoEmisor<-as.factor(datos$MedioPagoEmisor)
datos$MedioPagoPlan<-as.factor(datos$MedioPagoPlan)
datos$sexo<-as.numeric(datos$sexo)
datos$Estado<-as.numeric(datos$Estado)
datos$Numero_Hijos<-as.numeric(datos$Numero_Hijos)
datos <- datos %>%
select(Estado, Producto, MedioPagoPlan, Antiguedad, edad)
prop.table(table(datos$Estado))
#Bases para Training Testing
set.seed(1353)
split <- rsample::initial_split(datos)
train_datos <- rsample::training(split)
test_datos <- rsample::testing(split)
15144/20192
5048/20192
datos=read.csv("BASE SEGUROS.csv",sep = ";",dec=",",stringsAsFactors = F)
datos$Producto<-as.factor(datos$Producto)
datos$Moneda<-as.factor(datos$Moneda)
datos$Plan<-as.factor(datos$Plan)
datos$MedioPagoEmisor<-as.factor(datos$MedioPagoEmisor)
datos$MedioPagoPlan<-as.factor(datos$MedioPagoPlan)
datos$sexo<-as.factor(datos$sexo)
datos$Estado<-as.numeric(datos$Estado)
datos$Numero_Hijos<-as.numeric(datos$Numero_Hijos)
# Seleccion de variables
library(coda)
library(MASS)
library(MCMCpack)
model1 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad+sexo+Numero_Hijos,
b0=0, B0=.001, data=datos,mcmc = 10000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
summary(model1)
coda::heidel.diag(model1)
coda::autocorr.plot(model1)
model2 <- MCMClogit(Estado~Producto+Moneda+Plan+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 30000,
marginal.likelihood ="Laplace",burnin = 1000,thin = 10)
coda::geweke.plot(model2)
#Modelo más probable es el modelo 2 (sin sexo, numero hijos)
BF<-BayesFactor(model1,model2)
mod.probs<- PostProbMod(BF)
mod.probs
coda::autocorr.plot(model2)
coda::heidel.diag(model2)
summary(model2)
model3 <- MCMClogit(Estado~Producto+MedioPagoEmisor+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
coda::heidel.diag(model3)
coda::geweke.plot(model3)
coda::autocorr.plot(model3)
summary(model3)
#Quitar medio pago emisor
model4 <- MCMClogit(Estado~Producto+MedioPagoPlan+Antiguedad+edad,
b0=0, B0=.001, data=datos,mcmc = 30000,marginal.likelihood ="Laplace",
burnin = 1000,thin = 10)
coda::heidel.diag(model4)
coda::autocorr.plot(model4)
coda::geweke.plot(model4)
summary(model4)
BF<-BayesFactor(model1,model2,model3,model4)
BF
options(scipen = 999)
BF
mod.probs<- PostProbMod(BF)
mod.probs
??PostProbMod
round(mod.probs,4)
BayesFactor(model1)
library(multilevel)
library(MCMCpack)
library(MCMCglmm)
library(bayesplot)
library(tidyverse)
library(coda)
datos=read.csv("BASE SEGUROS.csv",sep = ";",dec=",",stringsAsFactors = F)
datos$Producto<-as.factor(datos$Producto)
datos$Moneda<-as.factor(datos$Moneda)
datos$Plan<-as.factor(datos$Plan)
datos$MedioPagoEmisor<-as.factor(datos$MedioPagoEmisor)
datos$MedioPagoPlan<-as.factor(datos$MedioPagoPlan)
datos$sexo<-as.numeric(datos$sexo)
datos$Estado<-as.numeric(datos$Estado)
datos$Numero_Hijos<-as.numeric(datos$Numero_Hijos)
datos <- datos %>%
select(Estado, Producto, MedioPagoPlan, Antiguedad, edad)
prop.table(table(datos$Estado))
#Bases para Training Testing
set.seed(1353)
split <- rsample::initial_split(datos)
train_datos <- rsample::training(split)
test_datos <- rsample::testing(split)
prior1 <- list(R = list(V = 1, nu = 0))
mod1 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior1, family = "categorical")
mod1$DIC
coda::heidel.diag(mod1$Sol)
pred1 <- predict(mod1, newdata = test_datos)
p1<-pred1 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p1<-p1$table
p1
#precisión Global
precision_global<-round(sum(diag(p1))/sum(p1),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p1)[2]/colSums(p1)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p1)[1]/colSums(p1)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p1)[2]/rowSums(p1)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p1)[1]/rowSums(p1)[1],4)
asertividad_negativa
prior2 <- list(R = list(V = 1, nu = 0.002))
mod2 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior2, family = "categorical")
mod2$DIC
coda::heidel.diag(mod2$Sol)
geweke.plot(mod2$Sol)
autocorr.plot(mod2$Sol)
pred2 <- predict(mod2, newdata = test_datos)
p2<-pred2 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p2<-p2$table
p2
#precisión Global
precision_global<-round(sum(diag(p2))/sum(p2),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p2)[2]/colSums(p2)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p2)[1]/colSums(p2)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p2)[2]/rowSums(p2)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p2)[1]/rowSums(p2)[1],4)
asertividad_negativa
prior3 = list(B = list(mu = rep(0, 11), V = diag(11) * (1 + pi^2/3)), R = list(V = 1, nu = 0.002))
mod3 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior3, family = "categorical")
mod3$DIC
coda::heidel.diag(mod3$Sol)
pred3 <- predict(mod3, newdata = test_datos)
p3<-pred3 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p3<-p3$table
p3
#precisión Global
precision_global<-round(sum(diag(p3))/sum(p3),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p3)[2]/colSums(p3)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p3)[1]/colSums(p3)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p3)[2]/rowSums(p3)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p3)[1]/rowSums(p3)[1],4)
asertividad_negativa
prior4 = list(B = list(
mu = rep(0, 11),
V = gelman.prior(
~ Producto + MedioPagoPlan + Antiguedad + edad,
data = train_datos,
scale = sqrt(pi ^ 2 / 3 + 1),
intercept = T
)
),
R = list(V = 1, nu = 0.002))
mod4 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior4, family = "categorical")
mod4$DIC
coda::heidel.diag(mod4$Sol)
pred4 <- predict(mod4, newdata = test_datos)
p4<-pred4 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p4<-p4$table
p4
#precisión Global
precision_global<-round(sum(diag(p4))/sum(p4),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p4)[2]/colSums(p4)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p4)[1]/colSums(p4)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p4)[2]/rowSums(p4)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p4)[1]/rowSums(p4)[1],4)
asertividad_negativa
prior5 = list(R = list(V = 1, fix = 1),B = list(mu = rep(0, 11), V = diag(11) * (1 + pi^2/3)))
mod5 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior5, family = "categorical")
mod5$DIC
coda::heidel.diag(mod5$Sol)
autocorr.plot(mod5$Sol)
geweke.plot(mod5$Sol)
pred5 <- predict(mod5, newdata = test_datos)
p5<-pred5 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p5<-p5$table
p5
#precisión Global
precision_global<-round(sum(diag(p5))/sum(p5),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p5)[2]/colSums(p5)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p5)[1]/colSums(p5)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p5)[2]/rowSums(p5)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p5)[1]/rowSums(p5)[1],4)
asertividad_negativa
mod6 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior5, family = "categorical", nitt = 30000, thin = 20,burnin =3000)
mod6$DIC
coda::heidel.diag(mod6$Sol)
geweke.plot(mod6$Sol)
autocorr.plot(mod6$Sol)
geweke.plot(mod5$Sol)
autocorr.plot(mod5$Sol)
pred6 <- predict(mod6, newdata = test_datos)
p6<-pred6 %>%
as_tibble() %>%
mutate(
pred = as_factor(if_else(V1>.3,1,0)),
verd = as_factor(test_datos$Estado)
) %>%
yardstick::conf_mat(verd, pred)
p6<-p6$table
p6
#precisión Global
precision_global<-round(sum(diag(p6))/sum(p6),4)
precision_global
#Precisión Positiva (PP)
precision_positiva <- round(diag(p6)[2]/colSums(p6)[2],4)
precision_positiva
#Precisión Negativa (PN)
precision_negativa <- round(diag(p6)[1]/colSums(p6)[1],4)
precision_negativa
#Asertividad Positiva (AP)
asertividad_positiva<-round(diag(p6)[2]/rowSums(p6)[2],4)
asertividad_positiva
#Asertividad Negativa (NP)
asertividad_negativa<-round(diag(p6)[1]/rowSums(p6)[1],4)
asertividad_negativa
mod7 <- MCMCglmm(Estado~Producto+MedioPagoPlan+Antiguedad+edad, data = train_datos, prior = prior2, family = "categorical",nitt = 30000, thin = 20,burnin =3000)
mod7$DIC
coda::heidel.diag(mod7$Sol)
geweke.plot(mod7$Sol)
summary(mod6)
plot(mod6$Sol)
geweke.plot(mod6$Sol)
autocorr.plot(mod6$Sol)
coda::heidel.diag(mod6$Sol)
p6
